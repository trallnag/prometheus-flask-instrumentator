name: CI Production

on:
  push:
    tags:
      - "releases/[0-9]*.[0-9]*.[0-9]*"
    
jobs:

  job:
    name: Test and Release

    if: "!contains(github.event.head_commit.message, 'skip ci')"
    
    runs-on: ubuntu-latest
    env:
      PYPI_TOKEN: ${{ secrets.PYPI_TOKEN }}
    strategy:
      matrix:
        python-version: [3.6, 3.8]

    steps:
    
      - name: Checkout repositry
        uses: actions/checkout@v2

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Poetry and setup cache
        uses: Gr1N/setup-poetry@v2
      
      - name: Setup cache
        uses: actions/cache@v1
        with:
          path: ~/.cache/pypoetry/virtualenvs
          key: ${{ runner.os }}-poetry-${{ hashFiles('poetry.lock') }}
          restore-keys: |
            ${{ runner.os }}-poetry-
      
      - name: Install dependencies
        run: poetry install
      
      - name: Run black formatter
        run: poetry run black --check .

      - name: Lint with flake8
        run: poetry run flake8 --config .flake8 --statistics

      - name: Run Pytest
        run: poetry run pytest

      - name: Build
        run: poetry build
      
      - name: Release
        run: poetry publish -u __token__ -p "${PYPI_TOKEN}"
